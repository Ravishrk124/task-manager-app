### server/swagger.yaml

openapi: 3.0.0
info:
  title: Task Management API
  version: 1.0.0
  description: API for a full-stack task management application.

servers:
  - url: http://localhost:5000/api
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        role:
          type: string
          enum: [user, admin]

    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: ['To Do', 'In Progress', 'Done']
        priority:
          type: string
          enum: ['Low', 'Medium', 'High']
        dueDate:
          type: string
          format: date-time
        documents:
          type: array
          items:
            type: string
        assignee:
          $ref: '#/components/schemas/User'

    AuthInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

security:
  - BearerAuth: []

paths:
  /auth/register:
    post:
      tags: [Auth]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthInput'
      responses:
        '201':
          description: User registered successfully

  /auth/login:
    post:
      tags: [Auth]
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthInput'
      responses:
        '200':
          description: Login successful, returns token

  /users:
    get:
      tags: [Users]
      summary: Get all users (Admin only)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (not an admin)

  /users/{id}:
    delete:
      tags: [Users]
      summary: Delete a user (Admin only)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted
        '403':
          description: Forbidden

  /tasks:
    get:
      tags: [Tasks]
      summary: Get all tasks with filtering
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
        - name: priority
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A list of tasks

    post:
      tags: [Tasks]
      summary: Create a new task
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                dueDate:
                  type: string
                  format: date
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Task created

  /tasks/{id}:
    get:
      tags: [Tasks]
      summary: Get a single task by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task details

    delete:
      tags: [Tasks]
      summary: Delete a task
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task deleted